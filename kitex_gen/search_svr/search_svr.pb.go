// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.2
// source: search_svr.proto

package search_svr

import (
	context "context"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	base "rpc_test/kitex_gen/base"
	_ "rpc_test/kitex_gen/service/es_model/biz_es_model_item"
	biz_model_search "rpc_test/kitex_gen/service/model/biz_model_search"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SearchMode int32

const (
	SearchMode_SEARCH_MODE_UNKNOWN SearchMode = 0
	SearchMode_SEARCH_MODE_PRECISE SearchMode = 1
	SearchMode_SEARCH_MODE_FUZZY   SearchMode = 2
	SearchMode_SEARCH_MODE_PREFIX  SearchMode = 3
)

// Enum value maps for SearchMode.
var (
	SearchMode_name = map[int32]string{
		0: "SEARCH_MODE_UNKNOWN",
		1: "SEARCH_MODE_PRECISE",
		2: "SEARCH_MODE_FUZZY",
		3: "SEARCH_MODE_PREFIX",
	}
	SearchMode_value = map[string]int32{
		"SEARCH_MODE_UNKNOWN": 0,
		"SEARCH_MODE_PRECISE": 1,
		"SEARCH_MODE_FUZZY":   2,
		"SEARCH_MODE_PREFIX":  3,
	}
)

func (x SearchMode) Enum() *SearchMode {
	p := new(SearchMode)
	*p = x
	return p
}

func (x SearchMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchMode) Descriptor() protoreflect.EnumDescriptor {
	return file_search_svr_proto_enumTypes[0].Descriptor()
}

func (SearchMode) Type() protoreflect.EnumType {
	return &file_search_svr_proto_enumTypes[0]
}

func (x SearchMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchMode.Descriptor instead.
func (SearchMode) EnumDescriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{0}
}

type SortType int32

const (
	SortType_SORT_TYPE_UNKNOWN      SortType = 0
	SortType_SORT_TYPE_LATEST       SortType = 1
	SortType_SORT_TYPE_HOTTEST      SortType = 2
	SortType_SORT_TYPE_MOST_RELATED SortType = 3
)

// Enum value maps for SortType.
var (
	SortType_name = map[int32]string{
		0: "SORT_TYPE_UNKNOWN",
		1: "SORT_TYPE_LATEST",
		2: "SORT_TYPE_HOTTEST",
		3: "SORT_TYPE_MOST_RELATED",
	}
	SortType_value = map[string]int32{
		"SORT_TYPE_UNKNOWN":      0,
		"SORT_TYPE_LATEST":       1,
		"SORT_TYPE_HOTTEST":      2,
		"SORT_TYPE_MOST_RELATED": 3,
	}
)

func (x SortType) Enum() *SortType {
	p := new(SortType)
	*p = x
	return p
}

func (x SortType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SortType) Descriptor() protoreflect.EnumDescriptor {
	return file_search_svr_proto_enumTypes[1].Descriptor()
}

func (SortType) Type() protoreflect.EnumType {
	return &file_search_svr_proto_enumTypes[1]
}

func (x SortType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SortType.Descriptor instead.
func (SortType) EnumDescriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{1}
}

type SearchHashtagItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashtag    string     `protobuf:"bytes,1,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	Cursor     int64      `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit      int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchMode SearchMode `protobuf:"varint,4,opt,name=search_mode,json=searchMode,proto3,enum=search_svr.SearchMode" json:"search_mode,omitempty"`
}

func (x *SearchHashtagItemReq) Reset() {
	*x = SearchHashtagItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHashtagItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHashtagItemReq) ProtoMessage() {}

func (x *SearchHashtagItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHashtagItemReq.ProtoReflect.Descriptor instead.
func (*SearchHashtagItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{0}
}

func (x *SearchHashtagItemReq) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *SearchHashtagItemReq) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *SearchHashtagItemReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchHashtagItemReq) GetSearchMode() SearchMode {
	if x != nil {
		return x.SearchMode
	}
	return SearchMode_SEARCH_MODE_UNKNOWN
}

type SearchHashtagItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp   *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	ItemIds    []int64        `protobuf:"varint,2,rep,packed,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
	NextCursor int64          `protobuf:"varint,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore    bool           `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Total      int64          `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchHashtagItemResp) Reset() {
	*x = SearchHashtagItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHashtagItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHashtagItemResp) ProtoMessage() {}

func (x *SearchHashtagItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHashtagItemResp.ProtoReflect.Descriptor instead.
func (*SearchHashtagItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{1}
}

func (x *SearchHashtagItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchHashtagItemResp) GetItemIds() []int64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

func (x *SearchHashtagItemResp) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *SearchHashtagItemResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchHashtagItemResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string     `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	From       int64      `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Limit      int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchMode SearchMode `protobuf:"varint,4,opt,name=search_mode,json=searchMode,proto3,enum=search_svr.SearchMode" json:"search_mode,omitempty"`
}

func (x *SearchItemReq) Reset() {
	*x = SearchItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemReq) ProtoMessage() {}

func (x *SearchItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemReq.ProtoReflect.Descriptor instead.
func (*SearchItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{2}
}

func (x *SearchItemReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchItemReq) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SearchItemReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchItemReq) GetSearchMode() SearchMode {
	if x != nil {
		return x.SearchMode
	}
	return SearchMode_SEARCH_MODE_UNKNOWN
}

type SearchItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp                `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Items    []*biz_model_search.ItemIndex `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Total    int64                         `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchItemResp) Reset() {
	*x = SearchItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItemResp) ProtoMessage() {}

func (x *SearchItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItemResp.ProtoReflect.Descriptor instead.
func (*SearchItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{3}
}

func (x *SearchItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchItemResp) GetItems() []*biz_model_search.ItemIndex {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchItemResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      int64    `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Title       string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Hashtags    []string `protobuf:"bytes,4,rep,name=hashtags,proto3" json:"hashtags,omitempty"`
	CreateTime  int64    `protobuf:"varint,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // unix-milli
}

func (x *IndexItemReq) Reset() {
	*x = IndexItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexItemReq) ProtoMessage() {}

func (x *IndexItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexItemReq.ProtoReflect.Descriptor instead.
func (*IndexItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{4}
}

func (x *IndexItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *IndexItemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IndexItemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IndexItemReq) GetHashtags() []string {
	if x != nil {
		return x.Hashtags
	}
	return nil
}

func (x *IndexItemReq) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type IndexItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *IndexItemResp) Reset() {
	*x = IndexItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexItemResp) ProtoMessage() {}

func (x *IndexItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexItemResp.ProtoReflect.Descriptor instead.
func (*IndexItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{5}
}

func (x *IndexItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DelIndexItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *DelIndexItemReq) Reset() {
	*x = DelIndexItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIndexItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIndexItemReq) ProtoMessage() {}

func (x *DelIndexItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIndexItemReq.ProtoReflect.Descriptor instead.
func (*DelIndexItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{6}
}

func (x *DelIndexItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type DelIndexItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *DelIndexItemResp) Reset() {
	*x = DelIndexItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIndexItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIndexItemResp) ProtoMessage() {}

func (x *DelIndexItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIndexItemResp.ProtoReflect.Descriptor instead.
func (*DelIndexItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{7}
}

func (x *DelIndexItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type SearchItem4UgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string     `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	From       int64      `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Limit      int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchMode SearchMode `protobuf:"varint,4,opt,name=search_mode,json=searchMode,proto3,enum=search_svr.SearchMode" json:"search_mode,omitempty"`
	SortType   SortType   `protobuf:"varint,5,opt,name=sort_type,json=sortType,proto3,enum=search_svr.SortType" json:"sort_type,omitempty"`
}

func (x *SearchItem4UgReq) Reset() {
	*x = SearchItem4UgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItem4UgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItem4UgReq) ProtoMessage() {}

func (x *SearchItem4UgReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItem4UgReq.ProtoReflect.Descriptor instead.
func (*SearchItem4UgReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{8}
}

func (x *SearchItem4UgReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchItem4UgReq) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SearchItem4UgReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchItem4UgReq) GetSearchMode() SearchMode {
	if x != nil {
		return x.SearchMode
	}
	return SearchMode_SEARCH_MODE_UNKNOWN
}

func (x *SearchItem4UgReq) GetSortType() SortType {
	if x != nil {
		return x.SortType
	}
	return SortType_SORT_TYPE_UNKNOWN
}

type SearchItem4UgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp                  `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Items    []*biz_model_search.ItemIndexUg `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Total    int64                           `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchItem4UgResp) Reset() {
	*x = SearchItem4UgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchItem4UgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchItem4UgResp) ProtoMessage() {}

func (x *SearchItem4UgResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchItem4UgResp.ProtoReflect.Descriptor instead.
func (*SearchItem4UgResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{9}
}

func (x *SearchItem4UgResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchItem4UgResp) GetItems() []*biz_model_search.ItemIndexUg {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchItem4UgResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchHashtagItem4UgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hashtag string `protobuf:"bytes,1,opt,name=hashtag,proto3" json:"hashtag,omitempty"`
	From    int64  `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"`
	Limit   int32  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *SearchHashtagItem4UgReq) Reset() {
	*x = SearchHashtagItem4UgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHashtagItem4UgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHashtagItem4UgReq) ProtoMessage() {}

func (x *SearchHashtagItem4UgReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHashtagItem4UgReq.ProtoReflect.Descriptor instead.
func (*SearchHashtagItem4UgReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{10}
}

func (x *SearchHashtagItem4UgReq) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *SearchHashtagItem4UgReq) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *SearchHashtagItem4UgReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchHashtagItem4UgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp                  `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Items    []*biz_model_search.ItemIndexUg `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	Total    int64                           `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchHashtagItem4UgResp) Reset() {
	*x = SearchHashtagItem4UgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchHashtagItem4UgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchHashtagItem4UgResp) ProtoMessage() {}

func (x *SearchHashtagItem4UgResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchHashtagItem4UgResp.ProtoReflect.Descriptor instead.
func (*SearchHashtagItem4UgResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{11}
}

func (x *SearchHashtagItem4UgResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchHashtagItem4UgResp) GetItems() []*biz_model_search.ItemIndexUg {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchHashtagItem4UgResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexItem4UgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *IndexItem4UgReq) Reset() {
	*x = IndexItem4UgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexItem4UgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexItem4UgReq) ProtoMessage() {}

func (x *IndexItem4UgReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexItem4UgReq.ProtoReflect.Descriptor instead.
func (*IndexItem4UgReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{12}
}

func (x *IndexItem4UgReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type IndexItem4UgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *IndexItem4UgResp) Reset() {
	*x = IndexItem4UgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexItem4UgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexItem4UgResp) ProtoMessage() {}

func (x *IndexItem4UgResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexItem4UgResp.ProtoReflect.Descriptor instead.
func (*IndexItem4UgResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{13}
}

func (x *IndexItem4UgResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DelIndexItem4UgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *DelIndexItem4UgReq) Reset() {
	*x = DelIndexItem4UgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIndexItem4UgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIndexItem4UgReq) ProtoMessage() {}

func (x *DelIndexItem4UgReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIndexItem4UgReq.ProtoReflect.Descriptor instead.
func (*DelIndexItem4UgReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{14}
}

func (x *DelIndexItem4UgReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type DelIndexItem4UgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *DelIndexItem4UgResp) Reset() {
	*x = DelIndexItem4UgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelIndexItem4UgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelIndexItem4UgResp) ProtoMessage() {}

func (x *DelIndexItem4UgResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelIndexItem4UgResp.ProtoReflect.Descriptor instead.
func (*DelIndexItem4UgResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{15}
}

func (x *DelIndexItem4UgResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type IndexAllItem4UgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IndexAllItem4UgReq) Reset() {
	*x = IndexAllItem4UgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexAllItem4UgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexAllItem4UgReq) ProtoMessage() {}

func (x *IndexAllItem4UgReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexAllItem4UgReq.ProtoReflect.Descriptor instead.
func (*IndexAllItem4UgReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{16}
}

type IndexAllItem4UgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *IndexAllItem4UgResp) Reset() {
	*x = IndexAllItem4UgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexAllItem4UgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexAllItem4UgResp) ProtoMessage() {}

func (x *IndexAllItem4UgResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexAllItem4UgResp.ProtoReflect.Descriptor instead.
func (*IndexAllItem4UgResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{17}
}

func (x *IndexAllItem4UgResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type SearchCharacterItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string     `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Cursor     int64      `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit      int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchMode SearchMode `protobuf:"varint,4,opt,name=search_mode,json=searchMode,proto3,enum=search_svr.SearchMode" json:"search_mode,omitempty"`
}

func (x *SearchCharacterItemReq) Reset() {
	*x = SearchCharacterItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCharacterItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCharacterItemReq) ProtoMessage() {}

func (x *SearchCharacterItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCharacterItemReq.ProtoReflect.Descriptor instead.
func (*SearchCharacterItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{18}
}

func (x *SearchCharacterItemReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchCharacterItemReq) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *SearchCharacterItemReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCharacterItemReq) GetSearchMode() SearchMode {
	if x != nil {
		return x.SearchMode
	}
	return SearchMode_SEARCH_MODE_UNKNOWN
}

type SearchCharacterItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp   *base.BaseResp                         `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Items      []*biz_model_search.CharacterItemIndex `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	NextCursor int64                                  `protobuf:"varint,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore    bool                                   `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Total      int64                                  `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchCharacterItemResp) Reset() {
	*x = SearchCharacterItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCharacterItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCharacterItemResp) ProtoMessage() {}

func (x *SearchCharacterItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCharacterItemResp.ProtoReflect.Descriptor instead.
func (*SearchCharacterItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{19}
}

func (x *SearchCharacterItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchCharacterItemResp) GetItems() []*biz_model_search.CharacterItemIndex {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SearchCharacterItemResp) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *SearchCharacterItemResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchCharacterItemResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SearchCharacterItemHintReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keyword    string     `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Cursor     int64      `protobuf:"varint,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit      int32      `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	SearchMode SearchMode `protobuf:"varint,4,opt,name=search_mode,json=searchMode,proto3,enum=search_svr.SearchMode" json:"search_mode,omitempty"`
}

func (x *SearchCharacterItemHintReq) Reset() {
	*x = SearchCharacterItemHintReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCharacterItemHintReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCharacterItemHintReq) ProtoMessage() {}

func (x *SearchCharacterItemHintReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCharacterItemHintReq.ProtoReflect.Descriptor instead.
func (*SearchCharacterItemHintReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{20}
}

func (x *SearchCharacterItemHintReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchCharacterItemHintReq) GetCursor() int64 {
	if x != nil {
		return x.Cursor
	}
	return 0
}

func (x *SearchCharacterItemHintReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCharacterItemHintReq) GetSearchMode() SearchMode {
	if x != nil {
		return x.SearchMode
	}
	return SearchMode_SEARCH_MODE_UNKNOWN
}

type SearchCharacterItemHintResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp   *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Hints      []string       `protobuf:"bytes,2,rep,name=hints,proto3" json:"hints,omitempty"`
	NextCursor int64          `protobuf:"varint,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore    bool           `protobuf:"varint,4,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	Total      int64          `protobuf:"varint,5,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *SearchCharacterItemHintResp) Reset() {
	*x = SearchCharacterItemHintResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCharacterItemHintResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCharacterItemHintResp) ProtoMessage() {}

func (x *SearchCharacterItemHintResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCharacterItemHintResp.ProtoReflect.Descriptor instead.
func (*SearchCharacterItemHintResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{21}
}

func (x *SearchCharacterItemHintResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchCharacterItemHintResp) GetHints() []string {
	if x != nil {
		return x.Hints
	}
	return nil
}

func (x *SearchCharacterItemHintResp) GetNextCursor() int64 {
	if x != nil {
		return x.NextCursor
	}
	return 0
}

func (x *SearchCharacterItemHintResp) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *SearchCharacterItemHintResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexCharacterItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemIds []int64 `protobuf:"varint,1,rep,packed,name=item_ids,json=itemIds,proto3" json:"item_ids,omitempty"`
}

func (x *IndexCharacterItemReq) Reset() {
	*x = IndexCharacterItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexCharacterItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexCharacterItemReq) ProtoMessage() {}

func (x *IndexCharacterItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexCharacterItemReq.ProtoReflect.Descriptor instead.
func (*IndexCharacterItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{22}
}

func (x *IndexCharacterItemReq) GetItemIds() []int64 {
	if x != nil {
		return x.ItemIds
	}
	return nil
}

type IndexCharacterItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *IndexCharacterItemResp) Reset() {
	*x = IndexCharacterItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexCharacterItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexCharacterItemResp) ProtoMessage() {}

func (x *IndexCharacterItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexCharacterItemResp.ProtoReflect.Descriptor instead.
func (*IndexCharacterItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{23}
}

func (x *IndexCharacterItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DeleteCharacterItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *DeleteCharacterItemReq) Reset() {
	*x = DeleteCharacterItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacterItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterItemReq) ProtoMessage() {}

func (x *DeleteCharacterItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterItemReq.ProtoReflect.Descriptor instead.
func (*DeleteCharacterItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteCharacterItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type DeleteCharacterItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *DeleteCharacterItemResp) Reset() {
	*x = DeleteCharacterItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacterItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterItemResp) ProtoMessage() {}

func (x *DeleteCharacterItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterItemResp.ProtoReflect.Descriptor instead.
func (*DeleteCharacterItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{25}
}

func (x *DeleteCharacterItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

// for "search-item"
type ESSyncItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId      int64  `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	MuserId     int64  `protobuf:"varint,2,opt,name=muser_id,json=muserId,proto3" json:"muser_id,omitempty"`
	MuserName   string `protobuf:"bytes,3,opt,name=muser_name,json=muserName,proto3" json:"muser_name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Title       string `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Bio         string `protobuf:"bytes,6,opt,name=Bio,proto3" json:"Bio,omitempty"`
}

func (x *ESSyncItemReq) Reset() {
	*x = ESSyncItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESSyncItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESSyncItemReq) ProtoMessage() {}

func (x *ESSyncItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESSyncItemReq.ProtoReflect.Descriptor instead.
func (*ESSyncItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{26}
}

func (x *ESSyncItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *ESSyncItemReq) GetMuserId() int64 {
	if x != nil {
		return x.MuserId
	}
	return 0
}

func (x *ESSyncItemReq) GetMuserName() string {
	if x != nil {
		return x.MuserName
	}
	return ""
}

func (x *ESSyncItemReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ESSyncItemReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ESSyncItemReq) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

type ESSyncItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *ESSyncItemResp) Reset() {
	*x = ESSyncItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESSyncItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESSyncItemResp) ProtoMessage() {}

func (x *ESSyncItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESSyncItemResp.ProtoReflect.Descriptor instead.
func (*ESSyncItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{27}
}

func (x *ESSyncItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type ESBulkSyncItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ESSyncItemReq `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ESBulkSyncItemReq) Reset() {
	*x = ESBulkSyncItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESBulkSyncItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESBulkSyncItemReq) ProtoMessage() {}

func (x *ESBulkSyncItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESBulkSyncItemReq.ProtoReflect.Descriptor instead.
func (*ESBulkSyncItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{28}
}

func (x *ESBulkSyncItemReq) GetItems() []*ESSyncItemReq {
	if x != nil {
		return x.Items
	}
	return nil
}

type ESBulkSyncItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *ESBulkSyncItemResp) Reset() {
	*x = ESBulkSyncItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESBulkSyncItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESBulkSyncItemResp) ProtoMessage() {}

func (x *ESBulkSyncItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESBulkSyncItemResp.ProtoReflect.Descriptor instead.
func (*ESBulkSyncItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{29}
}

func (x *ESBulkSyncItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type ESDeleteItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *ESDeleteItemReq) Reset() {
	*x = ESDeleteItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESDeleteItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESDeleteItemReq) ProtoMessage() {}

func (x *ESDeleteItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESDeleteItemReq.ProtoReflect.Descriptor instead.
func (*ESDeleteItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{30}
}

func (x *ESDeleteItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ESDeleteItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *ESDeleteItemResp) Reset() {
	*x = ESDeleteItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESDeleteItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESDeleteItemResp) ProtoMessage() {}

func (x *ESDeleteItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESDeleteItemResp.ProtoReflect.Descriptor instead.
func (*ESDeleteItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{31}
}

func (x *ESDeleteItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type ESQueryItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *ESQueryItemReq) Reset() {
	*x = ESQueryItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESQueryItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESQueryItemReq) ProtoMessage() {}

func (x *ESQueryItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESQueryItemReq.ProtoReflect.Descriptor instead.
func (*ESQueryItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{32}
}

func (x *ESQueryItemReq) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

type ESQueryItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Items    []byte         `protobuf:"bytes,2,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *ESQueryItemResp) Reset() {
	*x = ESQueryItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESQueryItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESQueryItemResp) ProtoMessage() {}

func (x *ESQueryItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESQueryItemResp.ProtoReflect.Descriptor instead.
func (*ESQueryItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{33}
}

func (x *ESQueryItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *ESQueryItemResp) GetItems() []byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type ESMGetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId int64 `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *ESMGetItemReq) Reset() {
	*x = ESMGetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESMGetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESMGetItemReq) ProtoMessage() {}

func (x *ESMGetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESMGetItemReq.ProtoReflect.Descriptor instead.
func (*ESMGetItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{34}
}

func (x *ESMGetItemReq) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

type ESMGetItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Item     []byte         `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ESMGetItemResp) Reset() {
	*x = ESMGetItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESMGetItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESMGetItemResp) ProtoMessage() {}

func (x *ESMGetItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESMGetItemResp.ProtoReflect.Descriptor instead.
func (*ESMGetItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{35}
}

func (x *ESMGetItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *ESMGetItemResp) GetItem() []byte {
	if x != nil {
		return x.Item
	}
	return nil
}

type HashtagItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashtagId   int64   `protobuf:"varint,1,opt,name=HashtagId,proto3" json:"HashtagId,omitempty"`
	ItemId      int64   `protobuf:"varint,2,opt,name=ItemId,proto3" json:"ItemId,omitempty"`
	Hashtag     string  `protobuf:"bytes,3,opt,name=Hashtag,proto3" json:"Hashtag,omitempty"`
	SexualScore float32 `protobuf:"fixed32,4,opt,name=SexualScore,proto3" json:"SexualScore,omitempty"`
	CreateTime  int64   `protobuf:"varint,5,opt,name=CreateTime,proto3" json:"CreateTime,omitempty"`
}

func (x *HashtagItem) Reset() {
	*x = HashtagItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashtagItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashtagItem) ProtoMessage() {}

func (x *HashtagItem) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashtagItem.ProtoReflect.Descriptor instead.
func (*HashtagItem) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{36}
}

func (x *HashtagItem) GetHashtagId() int64 {
	if x != nil {
		return x.HashtagId
	}
	return 0
}

func (x *HashtagItem) GetItemId() int64 {
	if x != nil {
		return x.ItemId
	}
	return 0
}

func (x *HashtagItem) GetHashtag() string {
	if x != nil {
		return x.Hashtag
	}
	return ""
}

func (x *HashtagItem) GetSexualScore() float32 {
	if x != nil {
		return x.SexualScore
	}
	return 0
}

func (x *HashtagItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type BulkCreateHashtagItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*HashtagItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BulkCreateHashtagItemReq) Reset() {
	*x = BulkCreateHashtagItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCreateHashtagItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateHashtagItemReq) ProtoMessage() {}

func (x *BulkCreateHashtagItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateHashtagItemReq.ProtoReflect.Descriptor instead.
func (*BulkCreateHashtagItemReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{37}
}

func (x *BulkCreateHashtagItemReq) GetItems() []*HashtagItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type BulkCreateHashtagItemResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *BulkCreateHashtagItemResp) Reset() {
	*x = BulkCreateHashtagItemResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkCreateHashtagItemResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkCreateHashtagItemResp) ProtoMessage() {}

func (x *BulkCreateHashtagItemResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkCreateHashtagItemResp.ProtoReflect.Descriptor instead.
func (*BulkCreateHashtagItemResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{38}
}

func (x *BulkCreateHashtagItemResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type UpdateHashtagItemSexualScoreReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []byte `protobuf:"bytes,3,opt,name=Query,proto3" json:"Query,omitempty"`
}

func (x *UpdateHashtagItemSexualScoreReq) Reset() {
	*x = UpdateHashtagItemSexualScoreReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHashtagItemSexualScoreReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHashtagItemSexualScoreReq) ProtoMessage() {}

func (x *UpdateHashtagItemSexualScoreReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHashtagItemSexualScoreReq.ProtoReflect.Descriptor instead.
func (*UpdateHashtagItemSexualScoreReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{39}
}

func (x *UpdateHashtagItemSexualScoreReq) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

type UpdateHashtagItemSexualScoreResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *UpdateHashtagItemSexualScoreResp) Reset() {
	*x = UpdateHashtagItemSexualScoreResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHashtagItemSexualScoreResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHashtagItemSexualScoreResp) ProtoMessage() {}

func (x *UpdateHashtagItemSexualScoreResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHashtagItemSexualScoreResp.ProtoReflect.Descriptor instead.
func (*UpdateHashtagItemSexualScoreResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{40}
}

func (x *UpdateHashtagItemSexualScoreResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

// for "search-user"
type ESUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID    int64    `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Email     string   `protobuf:"bytes,2,opt,name=Email,proto3" json:"Email,omitempty"`
	NickName  string   `protobuf:"bytes,3,opt,name=NickName,proto3" json:"NickName,omitempty"`
	DeviceIDs []int64  `protobuf:"varint,4,rep,packed,name=DeviceIDs,proto3" json:"DeviceIDs,omitempty"`
	Channels  []string `protobuf:"bytes,5,rep,name=Channels,proto3" json:"Channels,omitempty"`
	CreatedAt int64    `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *ESUser) Reset() {
	*x = ESUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESUser) ProtoMessage() {}

func (x *ESUser) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESUser.ProtoReflect.Descriptor instead.
func (*ESUser) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{41}
}

func (x *ESUser) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ESUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ESUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ESUser) GetDeviceIDs() []int64 {
	if x != nil {
		return x.DeviceIDs
	}
	return nil
}

func (x *ESUser) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

func (x *ESUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SyncUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *ESUser `protobuf:"bytes,1,opt,name=User,proto3" json:"User,omitempty"`
}

func (x *SyncUserReq) Reset() {
	*x = SyncUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserReq) ProtoMessage() {}

func (x *SyncUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserReq.ProtoReflect.Descriptor instead.
func (*SyncUserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{42}
}

func (x *SyncUserReq) GetUser() *ESUser {
	if x != nil {
		return x.User
	}
	return nil
}

type SyncUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *SyncUserResp) Reset() {
	*x = SyncUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncUserResp) ProtoMessage() {}

func (x *SyncUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncUserResp.ProtoReflect.Descriptor instead.
func (*SyncUserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{43}
}

func (x *SyncUserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DeleteUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *DeleteUserReq) Reset() {
	*x = DeleteUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserReq) ProtoMessage() {}

func (x *DeleteUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserReq.ProtoReflect.Descriptor instead.
func (*DeleteUserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{44}
}

func (x *DeleteUserReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type DeleteUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *DeleteUserResp) Reset() {
	*x = DeleteUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserResp) ProtoMessage() {}

func (x *DeleteUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserResp.ProtoReflect.Descriptor instead.
func (*DeleteUserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{45}
}

func (x *DeleteUserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type SearchUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []byte `protobuf:"bytes,1,opt,name=Query,proto3" json:"Query,omitempty"`
}

func (x *SearchUserReq) Reset() {
	*x = SearchUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserReq) ProtoMessage() {}

func (x *SearchUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserReq.ProtoReflect.Descriptor instead.
func (*SearchUserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{46}
}

func (x *SearchUserReq) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

type SearchUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Users    []byte         `protobuf:"bytes,2,opt,name=Users,proto3" json:"Users,omitempty"`
}

func (x *SearchUserResp) Reset() {
	*x = SearchUserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchUserResp) ProtoMessage() {}

func (x *SearchUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchUserResp.ProtoReflect.Descriptor instead.
func (*SearchUserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{47}
}

func (x *SearchUserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchUserResp) GetUsers() []byte {
	if x != nil {
		return x.Users
	}
	return nil
}

type ESDocByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocID string `protobuf:"bytes,1,opt,name=DocID,proto3" json:"DocID,omitempty"`
}

func (x *ESDocByIdReq) Reset() {
	*x = ESDocByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESDocByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESDocByIdReq) ProtoMessage() {}

func (x *ESDocByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESDocByIdReq.ProtoReflect.Descriptor instead.
func (*ESDocByIdReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{48}
}

func (x *ESDocByIdReq) GetDocID() string {
	if x != nil {
		return x.DocID
	}
	return ""
}

type ESDocByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Doc      []byte         `protobuf:"bytes,2,opt,name=Doc,proto3" json:"Doc,omitempty"`
}

func (x *ESDocByIdResp) Reset() {
	*x = ESDocByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESDocByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESDocByIdResp) ProtoMessage() {}

func (x *ESDocByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESDocByIdResp.ProtoReflect.Descriptor instead.
func (*ESDocByIdResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{49}
}

func (x *ESDocByIdResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *ESDocByIdResp) GetDoc() []byte {
	if x != nil {
		return x.Doc
	}
	return nil
}

// for "search-muser"
type ESMuser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MuserID     int64  `protobuf:"varint,1,opt,name=MuserID,proto3" json:"MuserID,omitempty"`
	MuserName   string `protobuf:"bytes,2,opt,name=MuserName,proto3" json:"MuserName,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
}

func (x *ESMuser) Reset() {
	*x = ESMuser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ESMuser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ESMuser) ProtoMessage() {}

func (x *ESMuser) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ESMuser.ProtoReflect.Descriptor instead.
func (*ESMuser) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{50}
}

func (x *ESMuser) GetMuserID() int64 {
	if x != nil {
		return x.MuserID
	}
	return 0
}

func (x *ESMuser) GetMuserName() string {
	if x != nil {
		return x.MuserName
	}
	return ""
}

func (x *ESMuser) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type SyncESMuserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muser *ESMuser `protobuf:"bytes,1,opt,name=muser,proto3" json:"muser,omitempty"`
}

func (x *SyncESMuserReq) Reset() {
	*x = SyncESMuserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncESMuserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncESMuserReq) ProtoMessage() {}

func (x *SyncESMuserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncESMuserReq.ProtoReflect.Descriptor instead.
func (*SyncESMuserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{51}
}

func (x *SyncESMuserReq) GetMuser() *ESMuser {
	if x != nil {
		return x.Muser
	}
	return nil
}

type SyncESMuserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *SyncESMuserResp) Reset() {
	*x = SyncESMuserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SyncESMuserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncESMuserResp) ProtoMessage() {}

func (x *SyncESMuserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncESMuserResp.ProtoReflect.Descriptor instead.
func (*SyncESMuserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{52}
}

func (x *SyncESMuserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type DeleteMuserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MuserId int64 `protobuf:"varint,1,opt,name=muser_id,json=muserId,proto3" json:"muser_id,omitempty"`
}

func (x *DeleteMuserReq) Reset() {
	*x = DeleteMuserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMuserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMuserReq) ProtoMessage() {}

func (x *DeleteMuserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMuserReq.ProtoReflect.Descriptor instead.
func (*DeleteMuserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{53}
}

func (x *DeleteMuserReq) GetMuserId() int64 {
	if x != nil {
		return x.MuserId
	}
	return 0
}

type DeleteMuserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
}

func (x *DeleteMuserResp) Reset() {
	*x = DeleteMuserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMuserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMuserResp) ProtoMessage() {}

func (x *DeleteMuserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMuserResp.ProtoReflect.Descriptor instead.
func (*DeleteMuserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{54}
}

func (x *DeleteMuserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

type SearchESMuserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query []byte `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *SearchESMuserReq) Reset() {
	*x = SearchESMuserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchESMuserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchESMuserReq) ProtoMessage() {}

func (x *SearchESMuserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchESMuserReq.ProtoReflect.Descriptor instead.
func (*SearchESMuserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{55}
}

func (x *SearchESMuserReq) GetQuery() []byte {
	if x != nil {
		return x.Query
	}
	return nil
}

type SearchESMuserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Muser    []byte         `protobuf:"bytes,2,opt,name=muser,proto3" json:"muser,omitempty"`
}

func (x *SearchESMuserResp) Reset() {
	*x = SearchESMuserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchESMuserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchESMuserResp) ProtoMessage() {}

func (x *SearchESMuserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchESMuserResp.ProtoReflect.Descriptor instead.
func (*SearchESMuserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{56}
}

func (x *SearchESMuserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *SearchESMuserResp) GetMuser() []byte {
	if x != nil {
		return x.Muser
	}
	return nil
}

type GetESMuserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MuserId int64 `protobuf:"varint,1,opt,name=muser_id,json=muserId,proto3" json:"muser_id,omitempty"`
}

func (x *GetESMuserReq) Reset() {
	*x = GetESMuserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetESMuserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetESMuserReq) ProtoMessage() {}

func (x *GetESMuserReq) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetESMuserReq.ProtoReflect.Descriptor instead.
func (*GetESMuserReq) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{57}
}

func (x *GetESMuserReq) GetMuserId() int64 {
	if x != nil {
		return x.MuserId
	}
	return 0
}

type GetESMuserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseResp *base.BaseResp `protobuf:"bytes,1,opt,name=baseResp,proto3" json:"baseResp,omitempty"`
	Muser    []byte         `protobuf:"bytes,2,opt,name=muser,proto3" json:"muser,omitempty"`
}

func (x *GetESMuserResp) Reset() {
	*x = GetESMuserResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_search_svr_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetESMuserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetESMuserResp) ProtoMessage() {}

func (x *GetESMuserResp) ProtoReflect() protoreflect.Message {
	mi := &file_search_svr_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetESMuserResp.ProtoReflect.Descriptor instead.
func (*GetESMuserResp) Descriptor() ([]byte, []int) {
	return file_search_svr_proto_rawDescGZIP(), []int{58}
}

func (x *GetESMuserResp) GetBaseResp() *base.BaseResp {
	if x != nil {
		return x.BaseResp
	}
	return nil
}

func (x *GetESMuserResp) GetMuser() []byte {
	if x != nil {
		return x.Muser
	}
	return nil
}

var File_search_svr_proto protoreflect.FileDescriptor

var file_search_svr_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x1a, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x65, 0x73, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2f, 0x62, 0x69, 0x7a, 0x5f, 0x65, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x14, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74,
	0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x8c, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a,
	0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x62, 0x69, 0x7a, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9c,
	0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3b, 0x0a,
	0x0d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2a, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x37, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76,
	0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x11,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x62,
	0x69, 0x7a, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5d, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x62, 0x69, 0x7a, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x55, 0x67, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2a, 0x0a, 0x0f, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x10, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2d, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x41, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x14, 0x0a, 0x12, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x22,
	0x41, 0x0a, 0x13, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x34,
	0x55, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x99, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f,
	0x64, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0xd3,
	0x01, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x69, 0x7a, 0x5f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x37, 0x0a, 0x0b, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x68, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63,
	0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x78,
	0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f,
	0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x32, 0x0a, 0x15, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x73, 0x22, 0x44, 0x0a, 0x16,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x31, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xac, 0x01, 0x0a,
	0x0d, 0x45, 0x53, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17,
	0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x42, 0x69, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x42, 0x69, 0x6f, 0x22, 0x3c, 0x0a, 0x0e, 0x45,
	0x53, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x44, 0x0a, 0x11, 0x45, 0x53, 0x42,
	0x75, 0x6c, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x53, 0x79, 0x6e,
	0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x40, 0x0a, 0x12, 0x45, 0x53, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x2a, 0x0a, 0x0f, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x3e, 0x0a,
	0x10, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x26, 0x0a,
	0x0e, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x53, 0x0a, 0x0f, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x28, 0x0a, 0x0d, 0x45, 0x53,
	0x4d, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0e, 0x45, 0x53, 0x4d, 0x47, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x48, 0x61, 0x73, 0x68, 0x74,
	0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x48, 0x61, 0x73, 0x68, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x48,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x78, 0x75, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x53, 0x65, 0x78,
	0x75, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x49, 0x0a, 0x18, 0x42, 0x75, 0x6c, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72,
	0x2e, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x19, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x37, 0x0a, 0x1f,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x65, 0x78, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x14, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x4e, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x78, 0x75, 0x61, 0x6c,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0xaa, 0x01, 0x0a, 0x06, 0x45, 0x53, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x4e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x44, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x26, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72, 0x22, 0x3a, 0x0a, 0x0c, 0x53, 0x79, 0x6e,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x27, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3c,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x0d,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x52, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x24, 0x0a, 0x0c, 0x45, 0x53, 0x44, 0x6f, 0x63,
	0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x44, 0x22, 0x4d, 0x0a,
	0x0d, 0x45, 0x53, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a,
	0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x6f,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x44, 0x6f, 0x63, 0x22, 0x63, 0x0a, 0x07,
	0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x3b, 0x0a, 0x0e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x22, 0x3d,
	0x0a, 0x0f, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2b, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52,
	0x08, 0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x22, 0x28, 0x0a, 0x10, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x22, 0x55, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x53, 0x4d,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x53, 0x4d,
	0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x65, 0x72, 0x2a, 0x6d, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x41, 0x52,
	0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x43, 0x49, 0x53, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45,
	0x41, 0x52, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x46, 0x55, 0x5a, 0x5a, 0x59, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x46, 0x49, 0x58, 0x10, 0x03, 0x2a, 0x6a, 0x0a, 0x08, 0x53, 0x6f, 0x72,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x41, 0x54, 0x45, 0x53, 0x54,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x4f, 0x52, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x48, 0x4f, 0x54, 0x54, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x4f, 0x52,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x4f, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x4c, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x32, 0x96, 0x12, 0x0a, 0x09, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x76, 0x72, 0x12, 0x5a, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61, 0x73,
	0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61, 0x73, 0x68,
	0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61,
	0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0f, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x41, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6c, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6c, 0x6c,
	0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x63, 0x0a,
	0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x34, 0x55, 0x67, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73,
	0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x61,
	0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34,
	0x55, 0x67, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x54, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34,
	0x55, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x34, 0x55, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x23, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x71, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x48,
	0x69, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x48, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x45, 0x53, 0x53, 0x79, 0x6e, 0x63,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76,
	0x72, 0x2e, 0x45, 0x53, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a,
	0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x53,
	0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x51, 0x0a,
	0x0e, 0x45, 0x53, 0x42, 0x75, 0x6c, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1d, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x42,
	0x75, 0x6c, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1e,
	0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x42, 0x75,
	0x6c, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x0c, 0x45, 0x53, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x0b, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x45, 0x53, 0x4d, 0x47, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73,
	0x76, 0x72, 0x2e, 0x45, 0x53, 0x4d, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53,
	0x4d, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x66,
	0x0a, 0x15, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x24, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x73, 0x76, 0x72, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x7b, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x78, 0x75, 0x61,
	0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x76, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x65, 0x78, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x74, 0x61, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x53, 0x65, 0x78, 0x75, 0x61, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x08, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x17, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x79, 0x6e,
	0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76,
	0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x45, 0x53, 0x44, 0x6f, 0x63, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x45, 0x53, 0x44, 0x6f, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x45, 0x53, 0x44, 0x6f, 0x63, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x53, 0x79, 0x6e,
	0x63, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x73, 0x76, 0x72, 0x2e, 0x53, 0x79, 0x6e, 0x63, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e,
	0x53, 0x79, 0x6e, 0x63, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x65, 0x72,
	0x12, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x53,
	0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x53, 0x4d, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x4d, 0x75, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73,
	0x76, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x2e, 0x47, 0x65,
	0x74, 0x45, 0x53, 0x4d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x1f,
	0x5a, 0x1d, 0x72, 0x70, 0x63, 0x5f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78,
	0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x73, 0x76, 0x72, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_search_svr_proto_rawDescOnce sync.Once
	file_search_svr_proto_rawDescData = file_search_svr_proto_rawDesc
)

func file_search_svr_proto_rawDescGZIP() []byte {
	file_search_svr_proto_rawDescOnce.Do(func() {
		file_search_svr_proto_rawDescData = protoimpl.X.CompressGZIP(file_search_svr_proto_rawDescData)
	})
	return file_search_svr_proto_rawDescData
}

var file_search_svr_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_search_svr_proto_msgTypes = make([]protoimpl.MessageInfo, 59)
var file_search_svr_proto_goTypes = []interface{}{
	(SearchMode)(0),                             // 0: search_svr.SearchMode
	(SortType)(0),                               // 1: search_svr.SortType
	(*SearchHashtagItemReq)(nil),                // 2: search_svr.SearchHashtagItemReq
	(*SearchHashtagItemResp)(nil),               // 3: search_svr.SearchHashtagItemResp
	(*SearchItemReq)(nil),                       // 4: search_svr.SearchItemReq
	(*SearchItemResp)(nil),                      // 5: search_svr.SearchItemResp
	(*IndexItemReq)(nil),                        // 6: search_svr.IndexItemReq
	(*IndexItemResp)(nil),                       // 7: search_svr.IndexItemResp
	(*DelIndexItemReq)(nil),                     // 8: search_svr.DelIndexItemReq
	(*DelIndexItemResp)(nil),                    // 9: search_svr.DelIndexItemResp
	(*SearchItem4UgReq)(nil),                    // 10: search_svr.SearchItem4UgReq
	(*SearchItem4UgResp)(nil),                   // 11: search_svr.SearchItem4UgResp
	(*SearchHashtagItem4UgReq)(nil),             // 12: search_svr.SearchHashtagItem4UgReq
	(*SearchHashtagItem4UgResp)(nil),            // 13: search_svr.SearchHashtagItem4UgResp
	(*IndexItem4UgReq)(nil),                     // 14: search_svr.IndexItem4UgReq
	(*IndexItem4UgResp)(nil),                    // 15: search_svr.IndexItem4UgResp
	(*DelIndexItem4UgReq)(nil),                  // 16: search_svr.DelIndexItem4UgReq
	(*DelIndexItem4UgResp)(nil),                 // 17: search_svr.DelIndexItem4UgResp
	(*IndexAllItem4UgReq)(nil),                  // 18: search_svr.IndexAllItem4UgReq
	(*IndexAllItem4UgResp)(nil),                 // 19: search_svr.IndexAllItem4UgResp
	(*SearchCharacterItemReq)(nil),              // 20: search_svr.SearchCharacterItemReq
	(*SearchCharacterItemResp)(nil),             // 21: search_svr.SearchCharacterItemResp
	(*SearchCharacterItemHintReq)(nil),          // 22: search_svr.SearchCharacterItemHintReq
	(*SearchCharacterItemHintResp)(nil),         // 23: search_svr.SearchCharacterItemHintResp
	(*IndexCharacterItemReq)(nil),               // 24: search_svr.IndexCharacterItemReq
	(*IndexCharacterItemResp)(nil),              // 25: search_svr.IndexCharacterItemResp
	(*DeleteCharacterItemReq)(nil),              // 26: search_svr.DeleteCharacterItemReq
	(*DeleteCharacterItemResp)(nil),             // 27: search_svr.DeleteCharacterItemResp
	(*ESSyncItemReq)(nil),                       // 28: search_svr.ESSyncItemReq
	(*ESSyncItemResp)(nil),                      // 29: search_svr.ESSyncItemResp
	(*ESBulkSyncItemReq)(nil),                   // 30: search_svr.ESBulkSyncItemReq
	(*ESBulkSyncItemResp)(nil),                  // 31: search_svr.ESBulkSyncItemResp
	(*ESDeleteItemReq)(nil),                     // 32: search_svr.ESDeleteItemReq
	(*ESDeleteItemResp)(nil),                    // 33: search_svr.ESDeleteItemResp
	(*ESQueryItemReq)(nil),                      // 34: search_svr.ESQueryItemReq
	(*ESQueryItemResp)(nil),                     // 35: search_svr.ESQueryItemResp
	(*ESMGetItemReq)(nil),                       // 36: search_svr.ESMGetItemReq
	(*ESMGetItemResp)(nil),                      // 37: search_svr.ESMGetItemResp
	(*HashtagItem)(nil),                         // 38: search_svr.HashtagItem
	(*BulkCreateHashtagItemReq)(nil),            // 39: search_svr.BulkCreateHashtagItemReq
	(*BulkCreateHashtagItemResp)(nil),           // 40: search_svr.BulkCreateHashtagItemResp
	(*UpdateHashtagItemSexualScoreReq)(nil),     // 41: search_svr.UpdateHashtagItemSexualScoreReq
	(*UpdateHashtagItemSexualScoreResp)(nil),    // 42: search_svr.UpdateHashtagItemSexualScoreResp
	(*ESUser)(nil),                              // 43: search_svr.ESUser
	(*SyncUserReq)(nil),                         // 44: search_svr.SyncUserReq
	(*SyncUserResp)(nil),                        // 45: search_svr.SyncUserResp
	(*DeleteUserReq)(nil),                       // 46: search_svr.DeleteUserReq
	(*DeleteUserResp)(nil),                      // 47: search_svr.DeleteUserResp
	(*SearchUserReq)(nil),                       // 48: search_svr.SearchUserReq
	(*SearchUserResp)(nil),                      // 49: search_svr.SearchUserResp
	(*ESDocByIdReq)(nil),                        // 50: search_svr.ESDocByIdReq
	(*ESDocByIdResp)(nil),                       // 51: search_svr.ESDocByIdResp
	(*ESMuser)(nil),                             // 52: search_svr.ESMuser
	(*SyncESMuserReq)(nil),                      // 53: search_svr.SyncESMuserReq
	(*SyncESMuserResp)(nil),                     // 54: search_svr.SyncESMuserResp
	(*DeleteMuserReq)(nil),                      // 55: search_svr.DeleteMuserReq
	(*DeleteMuserResp)(nil),                     // 56: search_svr.DeleteMuserResp
	(*SearchESMuserReq)(nil),                    // 57: search_svr.SearchESMuserReq
	(*SearchESMuserResp)(nil),                   // 58: search_svr.SearchESMuserResp
	(*GetESMuserReq)(nil),                       // 59: search_svr.GetESMuserReq
	(*GetESMuserResp)(nil),                      // 60: search_svr.GetESMuserResp
	(*base.BaseResp)(nil),                       // 61: base.BaseResp
	(*biz_model_search.ItemIndex)(nil),          // 62: biz_model_search.ItemIndex
	(*biz_model_search.ItemIndexUg)(nil),        // 63: biz_model_search.ItemIndexUg
	(*biz_model_search.CharacterItemIndex)(nil), // 64: biz_model_search.CharacterItemIndex
}
var file_search_svr_proto_depIdxs = []int32{
	0,  // 0: search_svr.SearchHashtagItemReq.search_mode:type_name -> search_svr.SearchMode
	61, // 1: search_svr.SearchHashtagItemResp.baseResp:type_name -> base.BaseResp
	0,  // 2: search_svr.SearchItemReq.search_mode:type_name -> search_svr.SearchMode
	61, // 3: search_svr.SearchItemResp.baseResp:type_name -> base.BaseResp
	62, // 4: search_svr.SearchItemResp.items:type_name -> biz_model_search.ItemIndex
	61, // 5: search_svr.IndexItemResp.baseResp:type_name -> base.BaseResp
	61, // 6: search_svr.DelIndexItemResp.baseResp:type_name -> base.BaseResp
	0,  // 7: search_svr.SearchItem4UgReq.search_mode:type_name -> search_svr.SearchMode
	1,  // 8: search_svr.SearchItem4UgReq.sort_type:type_name -> search_svr.SortType
	61, // 9: search_svr.SearchItem4UgResp.baseResp:type_name -> base.BaseResp
	63, // 10: search_svr.SearchItem4UgResp.items:type_name -> biz_model_search.ItemIndexUg
	61, // 11: search_svr.SearchHashtagItem4UgResp.baseResp:type_name -> base.BaseResp
	63, // 12: search_svr.SearchHashtagItem4UgResp.items:type_name -> biz_model_search.ItemIndexUg
	61, // 13: search_svr.IndexItem4UgResp.baseResp:type_name -> base.BaseResp
	61, // 14: search_svr.DelIndexItem4UgResp.baseResp:type_name -> base.BaseResp
	61, // 15: search_svr.IndexAllItem4UgResp.baseResp:type_name -> base.BaseResp
	0,  // 16: search_svr.SearchCharacterItemReq.search_mode:type_name -> search_svr.SearchMode
	61, // 17: search_svr.SearchCharacterItemResp.baseResp:type_name -> base.BaseResp
	64, // 18: search_svr.SearchCharacterItemResp.items:type_name -> biz_model_search.CharacterItemIndex
	0,  // 19: search_svr.SearchCharacterItemHintReq.search_mode:type_name -> search_svr.SearchMode
	61, // 20: search_svr.SearchCharacterItemHintResp.baseResp:type_name -> base.BaseResp
	61, // 21: search_svr.IndexCharacterItemResp.baseResp:type_name -> base.BaseResp
	61, // 22: search_svr.DeleteCharacterItemResp.baseResp:type_name -> base.BaseResp
	61, // 23: search_svr.ESSyncItemResp.baseResp:type_name -> base.BaseResp
	28, // 24: search_svr.ESBulkSyncItemReq.items:type_name -> search_svr.ESSyncItemReq
	61, // 25: search_svr.ESBulkSyncItemResp.baseResp:type_name -> base.BaseResp
	61, // 26: search_svr.ESDeleteItemResp.baseResp:type_name -> base.BaseResp
	61, // 27: search_svr.ESQueryItemResp.baseResp:type_name -> base.BaseResp
	61, // 28: search_svr.ESMGetItemResp.baseResp:type_name -> base.BaseResp
	38, // 29: search_svr.BulkCreateHashtagItemReq.items:type_name -> search_svr.HashtagItem
	61, // 30: search_svr.BulkCreateHashtagItemResp.baseResp:type_name -> base.BaseResp
	61, // 31: search_svr.UpdateHashtagItemSexualScoreResp.baseResp:type_name -> base.BaseResp
	43, // 32: search_svr.SyncUserReq.User:type_name -> search_svr.ESUser
	61, // 33: search_svr.SyncUserResp.baseResp:type_name -> base.BaseResp
	61, // 34: search_svr.DeleteUserResp.baseResp:type_name -> base.BaseResp
	61, // 35: search_svr.SearchUserResp.baseResp:type_name -> base.BaseResp
	61, // 36: search_svr.ESDocByIdResp.baseResp:type_name -> base.BaseResp
	52, // 37: search_svr.SyncESMuserReq.muser:type_name -> search_svr.ESMuser
	61, // 38: search_svr.SyncESMuserResp.baseResp:type_name -> base.BaseResp
	61, // 39: search_svr.DeleteMuserResp.baseResp:type_name -> base.BaseResp
	61, // 40: search_svr.SearchESMuserResp.baseResp:type_name -> base.BaseResp
	61, // 41: search_svr.GetESMuserResp.baseResp:type_name -> base.BaseResp
	2,  // 42: search_svr.SearchSvr.SearchHashtagItem:input_type -> search_svr.SearchHashtagItemReq
	4,  // 43: search_svr.SearchSvr.SearchItem:input_type -> search_svr.SearchItemReq
	6,  // 44: search_svr.SearchSvr.IndexItem:input_type -> search_svr.IndexItemReq
	8,  // 45: search_svr.SearchSvr.DelIndexItem:input_type -> search_svr.DelIndexItemReq
	18, // 46: search_svr.SearchSvr.IndexAllItem4Ug:input_type -> search_svr.IndexAllItem4UgReq
	10, // 47: search_svr.SearchSvr.SearchItem4Ug:input_type -> search_svr.SearchItem4UgReq
	12, // 48: search_svr.SearchSvr.SearchHashtagItem4Ug:input_type -> search_svr.SearchHashtagItem4UgReq
	14, // 49: search_svr.SearchSvr.IndexItem4Ug:input_type -> search_svr.IndexItem4UgReq
	16, // 50: search_svr.SearchSvr.DelIndexItem4Ug:input_type -> search_svr.DelIndexItem4UgReq
	20, // 51: search_svr.SearchSvr.SearchCharacterItem:input_type -> search_svr.SearchCharacterItemReq
	24, // 52: search_svr.SearchSvr.IndexCharacterItem:input_type -> search_svr.IndexCharacterItemReq
	26, // 53: search_svr.SearchSvr.DeleteCharacterItem:input_type -> search_svr.DeleteCharacterItemReq
	22, // 54: search_svr.SearchSvr.SearchCharacterItemHint:input_type -> search_svr.SearchCharacterItemHintReq
	28, // 55: search_svr.SearchSvr.ESSyncItem:input_type -> search_svr.ESSyncItemReq
	30, // 56: search_svr.SearchSvr.ESBulkSyncItem:input_type -> search_svr.ESBulkSyncItemReq
	32, // 57: search_svr.SearchSvr.ESDeleteItem:input_type -> search_svr.ESDeleteItemReq
	34, // 58: search_svr.SearchSvr.ESQueryItem:input_type -> search_svr.ESQueryItemReq
	36, // 59: search_svr.SearchSvr.ESMGetItem:input_type -> search_svr.ESMGetItemReq
	39, // 60: search_svr.SearchSvr.BulkCreateHashtagItem:input_type -> search_svr.BulkCreateHashtagItemReq
	41, // 61: search_svr.SearchSvr.UpdateHashtagItemSexualScore:input_type -> search_svr.UpdateHashtagItemSexualScoreReq
	44, // 62: search_svr.SearchSvr.SyncUser:input_type -> search_svr.SyncUserReq
	46, // 63: search_svr.SearchSvr.DeleteUser:input_type -> search_svr.DeleteUserReq
	48, // 64: search_svr.SearchSvr.SearchUser:input_type -> search_svr.SearchUserReq
	50, // 65: search_svr.SearchSvr.GetESDocById:input_type -> search_svr.ESDocByIdReq
	53, // 66: search_svr.SearchSvr.SyncMuser:input_type -> search_svr.SyncESMuserReq
	55, // 67: search_svr.SearchSvr.DeleteMuser:input_type -> search_svr.DeleteMuserReq
	57, // 68: search_svr.SearchSvr.SearchMuser:input_type -> search_svr.SearchESMuserReq
	59, // 69: search_svr.SearchSvr.GetMuser:input_type -> search_svr.GetESMuserReq
	3,  // 70: search_svr.SearchSvr.SearchHashtagItem:output_type -> search_svr.SearchHashtagItemResp
	5,  // 71: search_svr.SearchSvr.SearchItem:output_type -> search_svr.SearchItemResp
	7,  // 72: search_svr.SearchSvr.IndexItem:output_type -> search_svr.IndexItemResp
	9,  // 73: search_svr.SearchSvr.DelIndexItem:output_type -> search_svr.DelIndexItemResp
	19, // 74: search_svr.SearchSvr.IndexAllItem4Ug:output_type -> search_svr.IndexAllItem4UgResp
	11, // 75: search_svr.SearchSvr.SearchItem4Ug:output_type -> search_svr.SearchItem4UgResp
	13, // 76: search_svr.SearchSvr.SearchHashtagItem4Ug:output_type -> search_svr.SearchHashtagItem4UgResp
	15, // 77: search_svr.SearchSvr.IndexItem4Ug:output_type -> search_svr.IndexItem4UgResp
	17, // 78: search_svr.SearchSvr.DelIndexItem4Ug:output_type -> search_svr.DelIndexItem4UgResp
	21, // 79: search_svr.SearchSvr.SearchCharacterItem:output_type -> search_svr.SearchCharacterItemResp
	25, // 80: search_svr.SearchSvr.IndexCharacterItem:output_type -> search_svr.IndexCharacterItemResp
	27, // 81: search_svr.SearchSvr.DeleteCharacterItem:output_type -> search_svr.DeleteCharacterItemResp
	23, // 82: search_svr.SearchSvr.SearchCharacterItemHint:output_type -> search_svr.SearchCharacterItemHintResp
	29, // 83: search_svr.SearchSvr.ESSyncItem:output_type -> search_svr.ESSyncItemResp
	31, // 84: search_svr.SearchSvr.ESBulkSyncItem:output_type -> search_svr.ESBulkSyncItemResp
	33, // 85: search_svr.SearchSvr.ESDeleteItem:output_type -> search_svr.ESDeleteItemResp
	35, // 86: search_svr.SearchSvr.ESQueryItem:output_type -> search_svr.ESQueryItemResp
	37, // 87: search_svr.SearchSvr.ESMGetItem:output_type -> search_svr.ESMGetItemResp
	40, // 88: search_svr.SearchSvr.BulkCreateHashtagItem:output_type -> search_svr.BulkCreateHashtagItemResp
	42, // 89: search_svr.SearchSvr.UpdateHashtagItemSexualScore:output_type -> search_svr.UpdateHashtagItemSexualScoreResp
	45, // 90: search_svr.SearchSvr.SyncUser:output_type -> search_svr.SyncUserResp
	47, // 91: search_svr.SearchSvr.DeleteUser:output_type -> search_svr.DeleteUserResp
	49, // 92: search_svr.SearchSvr.SearchUser:output_type -> search_svr.SearchUserResp
	51, // 93: search_svr.SearchSvr.GetESDocById:output_type -> search_svr.ESDocByIdResp
	54, // 94: search_svr.SearchSvr.SyncMuser:output_type -> search_svr.SyncESMuserResp
	56, // 95: search_svr.SearchSvr.DeleteMuser:output_type -> search_svr.DeleteMuserResp
	58, // 96: search_svr.SearchSvr.SearchMuser:output_type -> search_svr.SearchESMuserResp
	60, // 97: search_svr.SearchSvr.GetMuser:output_type -> search_svr.GetESMuserResp
	70, // [70:98] is the sub-list for method output_type
	42, // [42:70] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_search_svr_proto_init() }
func file_search_svr_proto_init() {
	if File_search_svr_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_search_svr_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHashtagItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHashtagItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIndexItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIndexItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItem4UgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchItem4UgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHashtagItem4UgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchHashtagItem4UgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexItem4UgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexItem4UgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIndexItem4UgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelIndexItem4UgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexAllItem4UgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexAllItem4UgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCharacterItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCharacterItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCharacterItemHintReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCharacterItemHintResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexCharacterItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexCharacterItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacterItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacterItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESSyncItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESSyncItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESBulkSyncItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESBulkSyncItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESDeleteItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESDeleteItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESQueryItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESQueryItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESMGetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESMGetItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashtagItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCreateHashtagItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkCreateHashtagItemResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHashtagItemSexualScoreReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHashtagItemSexualScoreResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchUserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESDocByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESDocByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ESMuser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncESMuserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SyncESMuserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMuserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMuserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchESMuserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchESMuserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetESMuserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_search_svr_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetESMuserResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_search_svr_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   59,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_search_svr_proto_goTypes,
		DependencyIndexes: file_search_svr_proto_depIdxs,
		EnumInfos:         file_search_svr_proto_enumTypes,
		MessageInfos:      file_search_svr_proto_msgTypes,
	}.Build()
	File_search_svr_proto = out.File
	file_search_svr_proto_rawDesc = nil
	file_search_svr_proto_goTypes = nil
	file_search_svr_proto_depIdxs = nil
}

var _ context.Context

// Code generated by Kitex v0.7.3. DO NOT EDIT.

type SearchSvr interface {
	SearchHashtagItem(ctx context.Context, req *SearchHashtagItemReq) (res *SearchHashtagItemResp, err error)
	SearchItem(ctx context.Context, req *SearchItemReq) (res *SearchItemResp, err error)
	IndexItem(ctx context.Context, req *IndexItemReq) (res *IndexItemResp, err error)
	DelIndexItem(ctx context.Context, req *DelIndexItemReq) (res *DelIndexItemResp, err error)
	IndexAllItem4Ug(ctx context.Context, req *IndexAllItem4UgReq) (res *IndexAllItem4UgResp, err error)
	SearchItem4Ug(ctx context.Context, req *SearchItem4UgReq) (res *SearchItem4UgResp, err error)
	SearchHashtagItem4Ug(ctx context.Context, req *SearchHashtagItem4UgReq) (res *SearchHashtagItem4UgResp, err error)
	IndexItem4Ug(ctx context.Context, req *IndexItem4UgReq) (res *IndexItem4UgResp, err error)
	DelIndexItem4Ug(ctx context.Context, req *DelIndexItem4UgReq) (res *DelIndexItem4UgResp, err error)
	SearchCharacterItem(ctx context.Context, req *SearchCharacterItemReq) (res *SearchCharacterItemResp, err error)
	IndexCharacterItem(ctx context.Context, req *IndexCharacterItemReq) (res *IndexCharacterItemResp, err error)
	DeleteCharacterItem(ctx context.Context, req *DeleteCharacterItemReq) (res *DeleteCharacterItemResp, err error)
	SearchCharacterItemHint(ctx context.Context, req *SearchCharacterItemHintReq) (res *SearchCharacterItemHintResp, err error)
	ESSyncItem(ctx context.Context, req *ESSyncItemReq) (res *ESSyncItemResp, err error)
	ESBulkSyncItem(ctx context.Context, req *ESBulkSyncItemReq) (res *ESBulkSyncItemResp, err error)
	ESDeleteItem(ctx context.Context, req *ESDeleteItemReq) (res *ESDeleteItemResp, err error)
	ESQueryItem(ctx context.Context, req *ESQueryItemReq) (res *ESQueryItemResp, err error)
	ESMGetItem(ctx context.Context, req *ESMGetItemReq) (res *ESMGetItemResp, err error)
	BulkCreateHashtagItem(ctx context.Context, req *BulkCreateHashtagItemReq) (res *BulkCreateHashtagItemResp, err error)
	UpdateHashtagItemSexualScore(ctx context.Context, req *UpdateHashtagItemSexualScoreReq) (res *UpdateHashtagItemSexualScoreResp, err error)
	SyncUser(ctx context.Context, req *SyncUserReq) (res *SyncUserResp, err error)
	DeleteUser(ctx context.Context, req *DeleteUserReq) (res *DeleteUserResp, err error)
	SearchUser(ctx context.Context, req *SearchUserReq) (res *SearchUserResp, err error)
	GetESDocById(ctx context.Context, req *ESDocByIdReq) (res *ESDocByIdResp, err error)
	SyncMuser(ctx context.Context, req *SyncESMuserReq) (res *SyncESMuserResp, err error)
	DeleteMuser(ctx context.Context, req *DeleteMuserReq) (res *DeleteMuserResp, err error)
	SearchMuser(ctx context.Context, req *SearchESMuserReq) (res *SearchESMuserResp, err error)
	GetMuser(ctx context.Context, req *GetESMuserReq) (res *GetESMuserResp, err error)
}
