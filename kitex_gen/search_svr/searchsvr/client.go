// Code generated by Kitex v0.7.3. DO NOT EDIT.

package searchsvr

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
	search_svr "rpc_test/kitex_gen/search_svr"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	SearchHashtagItem(ctx context.Context, Req *search_svr.SearchHashtagItemReq, callOptions ...callopt.Option) (r *search_svr.SearchHashtagItemResp, err error)
	SearchItem(ctx context.Context, Req *search_svr.SearchItemReq, callOptions ...callopt.Option) (r *search_svr.SearchItemResp, err error)
	IndexItem(ctx context.Context, Req *search_svr.IndexItemReq, callOptions ...callopt.Option) (r *search_svr.IndexItemResp, err error)
	DelIndexItem(ctx context.Context, Req *search_svr.DelIndexItemReq, callOptions ...callopt.Option) (r *search_svr.DelIndexItemResp, err error)
	IndexAllItem4Ug(ctx context.Context, Req *search_svr.IndexAllItem4UgReq, callOptions ...callopt.Option) (r *search_svr.IndexAllItem4UgResp, err error)
	SearchItem4Ug(ctx context.Context, Req *search_svr.SearchItem4UgReq, callOptions ...callopt.Option) (r *search_svr.SearchItem4UgResp, err error)
	SearchHashtagItem4Ug(ctx context.Context, Req *search_svr.SearchHashtagItem4UgReq, callOptions ...callopt.Option) (r *search_svr.SearchHashtagItem4UgResp, err error)
	IndexItem4Ug(ctx context.Context, Req *search_svr.IndexItem4UgReq, callOptions ...callopt.Option) (r *search_svr.IndexItem4UgResp, err error)
	DelIndexItem4Ug(ctx context.Context, Req *search_svr.DelIndexItem4UgReq, callOptions ...callopt.Option) (r *search_svr.DelIndexItem4UgResp, err error)
	SearchCharacterItem(ctx context.Context, Req *search_svr.SearchCharacterItemReq, callOptions ...callopt.Option) (r *search_svr.SearchCharacterItemResp, err error)
	IndexCharacterItem(ctx context.Context, Req *search_svr.IndexCharacterItemReq, callOptions ...callopt.Option) (r *search_svr.IndexCharacterItemResp, err error)
	DeleteCharacterItem(ctx context.Context, Req *search_svr.DeleteCharacterItemReq, callOptions ...callopt.Option) (r *search_svr.DeleteCharacterItemResp, err error)
	SearchCharacterItemHint(ctx context.Context, Req *search_svr.SearchCharacterItemHintReq, callOptions ...callopt.Option) (r *search_svr.SearchCharacterItemHintResp, err error)
	ESSyncItem(ctx context.Context, Req *search_svr.ESSyncItemReq, callOptions ...callopt.Option) (r *search_svr.ESSyncItemResp, err error)
	ESBulkSyncItem(ctx context.Context, Req *search_svr.ESBulkSyncItemReq, callOptions ...callopt.Option) (r *search_svr.ESBulkSyncItemResp, err error)
	ESDeleteItem(ctx context.Context, Req *search_svr.ESDeleteItemReq, callOptions ...callopt.Option) (r *search_svr.ESDeleteItemResp, err error)
	ESQueryItem(ctx context.Context, Req *search_svr.ESQueryItemReq, callOptions ...callopt.Option) (r *search_svr.ESQueryItemResp, err error)
	ESMGetItem(ctx context.Context, Req *search_svr.ESMGetItemReq, callOptions ...callopt.Option) (r *search_svr.ESMGetItemResp, err error)
	BulkCreateHashtagItem(ctx context.Context, Req *search_svr.BulkCreateHashtagItemReq, callOptions ...callopt.Option) (r *search_svr.BulkCreateHashtagItemResp, err error)
	UpdateHashtagItemSexualScore(ctx context.Context, Req *search_svr.UpdateHashtagItemSexualScoreReq, callOptions ...callopt.Option) (r *search_svr.UpdateHashtagItemSexualScoreResp, err error)
	SyncUser(ctx context.Context, Req *search_svr.SyncUserReq, callOptions ...callopt.Option) (r *search_svr.SyncUserResp, err error)
	DeleteUser(ctx context.Context, Req *search_svr.DeleteUserReq, callOptions ...callopt.Option) (r *search_svr.DeleteUserResp, err error)
	SearchUser(ctx context.Context, Req *search_svr.SearchUserReq, callOptions ...callopt.Option) (r *search_svr.SearchUserResp, err error)
	GetESDocById(ctx context.Context, Req *search_svr.ESDocByIdReq, callOptions ...callopt.Option) (r *search_svr.ESDocByIdResp, err error)
	SyncMuser(ctx context.Context, Req *search_svr.SyncESMuserReq, callOptions ...callopt.Option) (r *search_svr.SyncESMuserResp, err error)
	DeleteMuser(ctx context.Context, Req *search_svr.DeleteMuserReq, callOptions ...callopt.Option) (r *search_svr.DeleteMuserResp, err error)
	SearchMuser(ctx context.Context, Req *search_svr.SearchESMuserReq, callOptions ...callopt.Option) (r *search_svr.SearchESMuserResp, err error)
	GetMuser(ctx context.Context, Req *search_svr.GetESMuserReq, callOptions ...callopt.Option) (r *search_svr.GetESMuserResp, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kSearchSvrClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kSearchSvrClient struct {
	*kClient
}

func (p *kSearchSvrClient) SearchHashtagItem(ctx context.Context, Req *search_svr.SearchHashtagItemReq, callOptions ...callopt.Option) (r *search_svr.SearchHashtagItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchHashtagItem(ctx, Req)
}

func (p *kSearchSvrClient) SearchItem(ctx context.Context, Req *search_svr.SearchItemReq, callOptions ...callopt.Option) (r *search_svr.SearchItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchItem(ctx, Req)
}

func (p *kSearchSvrClient) IndexItem(ctx context.Context, Req *search_svr.IndexItemReq, callOptions ...callopt.Option) (r *search_svr.IndexItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.IndexItem(ctx, Req)
}

func (p *kSearchSvrClient) DelIndexItem(ctx context.Context, Req *search_svr.DelIndexItemReq, callOptions ...callopt.Option) (r *search_svr.DelIndexItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DelIndexItem(ctx, Req)
}

func (p *kSearchSvrClient) IndexAllItem4Ug(ctx context.Context, Req *search_svr.IndexAllItem4UgReq, callOptions ...callopt.Option) (r *search_svr.IndexAllItem4UgResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.IndexAllItem4Ug(ctx, Req)
}

func (p *kSearchSvrClient) SearchItem4Ug(ctx context.Context, Req *search_svr.SearchItem4UgReq, callOptions ...callopt.Option) (r *search_svr.SearchItem4UgResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchItem4Ug(ctx, Req)
}

func (p *kSearchSvrClient) SearchHashtagItem4Ug(ctx context.Context, Req *search_svr.SearchHashtagItem4UgReq, callOptions ...callopt.Option) (r *search_svr.SearchHashtagItem4UgResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchHashtagItem4Ug(ctx, Req)
}

func (p *kSearchSvrClient) IndexItem4Ug(ctx context.Context, Req *search_svr.IndexItem4UgReq, callOptions ...callopt.Option) (r *search_svr.IndexItem4UgResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.IndexItem4Ug(ctx, Req)
}

func (p *kSearchSvrClient) DelIndexItem4Ug(ctx context.Context, Req *search_svr.DelIndexItem4UgReq, callOptions ...callopt.Option) (r *search_svr.DelIndexItem4UgResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DelIndexItem4Ug(ctx, Req)
}

func (p *kSearchSvrClient) SearchCharacterItem(ctx context.Context, Req *search_svr.SearchCharacterItemReq, callOptions ...callopt.Option) (r *search_svr.SearchCharacterItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchCharacterItem(ctx, Req)
}

func (p *kSearchSvrClient) IndexCharacterItem(ctx context.Context, Req *search_svr.IndexCharacterItemReq, callOptions ...callopt.Option) (r *search_svr.IndexCharacterItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.IndexCharacterItem(ctx, Req)
}

func (p *kSearchSvrClient) DeleteCharacterItem(ctx context.Context, Req *search_svr.DeleteCharacterItemReq, callOptions ...callopt.Option) (r *search_svr.DeleteCharacterItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteCharacterItem(ctx, Req)
}

func (p *kSearchSvrClient) SearchCharacterItemHint(ctx context.Context, Req *search_svr.SearchCharacterItemHintReq, callOptions ...callopt.Option) (r *search_svr.SearchCharacterItemHintResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchCharacterItemHint(ctx, Req)
}

func (p *kSearchSvrClient) ESSyncItem(ctx context.Context, Req *search_svr.ESSyncItemReq, callOptions ...callopt.Option) (r *search_svr.ESSyncItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ESSyncItem(ctx, Req)
}

func (p *kSearchSvrClient) ESBulkSyncItem(ctx context.Context, Req *search_svr.ESBulkSyncItemReq, callOptions ...callopt.Option) (r *search_svr.ESBulkSyncItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ESBulkSyncItem(ctx, Req)
}

func (p *kSearchSvrClient) ESDeleteItem(ctx context.Context, Req *search_svr.ESDeleteItemReq, callOptions ...callopt.Option) (r *search_svr.ESDeleteItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ESDeleteItem(ctx, Req)
}

func (p *kSearchSvrClient) ESQueryItem(ctx context.Context, Req *search_svr.ESQueryItemReq, callOptions ...callopt.Option) (r *search_svr.ESQueryItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ESQueryItem(ctx, Req)
}

func (p *kSearchSvrClient) ESMGetItem(ctx context.Context, Req *search_svr.ESMGetItemReq, callOptions ...callopt.Option) (r *search_svr.ESMGetItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.ESMGetItem(ctx, Req)
}

func (p *kSearchSvrClient) BulkCreateHashtagItem(ctx context.Context, Req *search_svr.BulkCreateHashtagItemReq, callOptions ...callopt.Option) (r *search_svr.BulkCreateHashtagItemResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BulkCreateHashtagItem(ctx, Req)
}

func (p *kSearchSvrClient) UpdateHashtagItemSexualScore(ctx context.Context, Req *search_svr.UpdateHashtagItemSexualScoreReq, callOptions ...callopt.Option) (r *search_svr.UpdateHashtagItemSexualScoreResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.UpdateHashtagItemSexualScore(ctx, Req)
}

func (p *kSearchSvrClient) SyncUser(ctx context.Context, Req *search_svr.SyncUserReq, callOptions ...callopt.Option) (r *search_svr.SyncUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SyncUser(ctx, Req)
}

func (p *kSearchSvrClient) DeleteUser(ctx context.Context, Req *search_svr.DeleteUserReq, callOptions ...callopt.Option) (r *search_svr.DeleteUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteUser(ctx, Req)
}

func (p *kSearchSvrClient) SearchUser(ctx context.Context, Req *search_svr.SearchUserReq, callOptions ...callopt.Option) (r *search_svr.SearchUserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchUser(ctx, Req)
}

func (p *kSearchSvrClient) GetESDocById(ctx context.Context, Req *search_svr.ESDocByIdReq, callOptions ...callopt.Option) (r *search_svr.ESDocByIdResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetESDocById(ctx, Req)
}

func (p *kSearchSvrClient) SyncMuser(ctx context.Context, Req *search_svr.SyncESMuserReq, callOptions ...callopt.Option) (r *search_svr.SyncESMuserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SyncMuser(ctx, Req)
}

func (p *kSearchSvrClient) DeleteMuser(ctx context.Context, Req *search_svr.DeleteMuserReq, callOptions ...callopt.Option) (r *search_svr.DeleteMuserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.DeleteMuser(ctx, Req)
}

func (p *kSearchSvrClient) SearchMuser(ctx context.Context, Req *search_svr.SearchESMuserReq, callOptions ...callopt.Option) (r *search_svr.SearchESMuserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.SearchMuser(ctx, Req)
}

func (p *kSearchSvrClient) GetMuser(ctx context.Context, Req *search_svr.GetESMuserReq, callOptions ...callopt.Option) (r *search_svr.GetESMuserResp, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.GetMuser(ctx, Req)
}
